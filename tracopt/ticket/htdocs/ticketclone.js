// Generated by CoffeeScript 1.3.3
(function() {
  var $, addCloneAction, addField, baseurl, commentClone, _0, _ref;

  $ = jQuery;

  _ref = /(.*)\/ticket\//.exec(location.href), _0 = _ref[0], baseurl = _ref[1];

  addField = function(form, name, value) {
    return form.append($("<input type=\"hidden\" name=\"field_" + name + "\" value=\"" + ($.htmlEscape(value)) + "\">"));
  };

  addCloneAction = function(container) {
    var btns, c, cform, form, name, oldvalue, _i, _len, _ref1;
    form = $("<form action=\"" + baseurl + "/newticket\" method=\"post\">\n <div class=\"inlinebuttons\">\n  <input type=\"submit\" name=\"clone\"\n         value=\"" + (_("Clone")) + "\"\n         title=\"" + (_("Create a new ticket from this comment")) + "\">\n  <input type=\"hidden\" name=\"__FORM_TOKEN\" value=\"" + form_token + "\">\n  <input type=\"hidden\" name=\"preview\" value=\"\">\n </div>\n</form>");
    for (name in old_values) {
      oldvalue = old_values[name];
      if (name !== "id" && name !== "summary" && name !== "description" && name !== "status" && name !== "resolution") {
        addField(form, name, oldvalue);
      }
    }
    for (_i = 0, _len = container.length; _i < _len; _i++) {
      _ref1 = container[_i], btns = _ref1[0], c = _ref1[1];
      if (!btns.length) {
        return;
      }
      cform = form.clone();
      addField(cform, 'summary', _("(part of #%(ticketid)s) %(summary)s", {
        ticketid: old_values.id,
        summary: old_values.summary
      }));
      addField(cform, 'description', _("Copied from [%(source)s]:\n----\n%(description)s", {
        source: "ticket:" + old_values.id + "#comment:" + c.cnum,
        description: c.comment
      }));
      btns.prepend(cform);
    }
  };

  commentClone = function(chgs) {
    var c;
    return addCloneAction((function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = chgs.length; _i < _len; _i++) {
        c = chgs[_i];
        _results.push([$("#trac-change-" + c.cnum + "-" + c.date + " .trac-ticket-buttons"), c]);
      }
      return _results;
    })());
  };

  $(document).ready(function() {
    var c;
    if ((typeof old_values !== "undefined" && old_values !== null) && (typeof changes !== "undefined" && changes !== null)) {
      return commentClone((function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = changes.length; _i < _len; _i++) {
          c = changes[_i];
          if ((c.cnum != null) && c.comment && c.permanent) {
            _results.push(c);
          }
        }
        return _results;
      })());
    }
  });

}).call(this);
